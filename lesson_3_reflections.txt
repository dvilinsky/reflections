You might want to create a file just on github and not on your local machine if you're working with other people and you're getting the file started for that but you don't necessarily need to or want to ahve it on your computer 

You'd want to manually pull because, if you have multiple people working on a project, you wouldn't want changes the make in thier
code to interfere with your own. If your code depends on some class that is in a certain state on your local version, and
then someone on another machine updates that class such that it might interfere with your code, you wouldn't want git to make 
that reflection automatically. 

Let's start with branches. Branches allow you to work on different versions of your code on your local machine. 
Clones and forks are related to each other. A clone copies a repository on github to your local machine. A fork clones a repository
on github into another github repository. You'd use one instead of the other when you want to perform the actions listed.

The benefit of having a local copy of the last known state of the remote copy is, well, so you can keep track of the history
of the remote and see if any changes you're making are conflicting with them.

Without using git or Github to collaborate, I could use another version control system like google docs. We have our project
directory, and we could each be working on our files, and then upload them to the directory when we're done, overwriting what
was there. The problem would arise if we each want to work on the same file. I don't think google docs would tell us where the 
conflicts were automatically. We might also not be able to rever to early changes as easily, and you can forget about branching.
But it could be done. Or we could not use any sort of cloud service, and just keep local copies of our project. We could them 
communicate what changes we're making to which files, and hash it all out by hand. That honestly wouldn't be too bad, in my 
opinion.  